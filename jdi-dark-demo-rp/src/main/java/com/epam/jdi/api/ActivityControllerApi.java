/*
 * Report Portal
 * Report Portal API documentation
 *
 * OpenAPI spec version: 5.2.0
 * Contact: Support EPMC-TST Report Portal <SupportEPMC-TSTReportPortal@epam.com>
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.epam.jdi.api;

import com.epam.http.annotations.GET;
import com.epam.http.annotations.QueryParameter;
import com.epam.http.annotations.ServiceDomain;
import com.epam.http.requests.RestDataMethod;
import com.epam.jdi.model.ActivityResource;
import com.epam.jdi.model.IterableActivityResource;

@ServiceDomain("${api}")
public class ActivityControllerApi {

    /**
     * Get activities for project
     *
     * @param projectName /path/ projectName (required)
     * @param filterEqAction /query/ Filters by 'action' (optional)
     * @param filterEqCreationDate /query/ Filters by 'creationDate' (optional)
     * @param filterEqEntity /query/ Filters by 'entity' (optional)
     * @param filterEqId /query/ Filters by 'id' (optional)
     * @param filterEqLogin /query/ Filters by 'login' (optional)
     * @param filterEqName /query/ Filters by 'name' (optional)
     * @param filterEqObjectId /query/ Filters by 'objectId' (optional)
     * @param filterEqObjectName /query/ Filters by 'objectName' (optional)
     * @param filterEqProjectId /query/ Filters by 'projectId' (optional)
     * @param filterEqUser /query/ Filters by 'user' (optional)
     * @param filterEqUserId /query/ Filters by 'userId' (optional)
     * @param pagePage /query/ Results page you want to retrieve (0..N) (optional)
     * @param pageSize /query/ Number of records per page (optional)
     * @param pageSort /query/ Sorting criteria in the format: property, (asc|desc). Default sort order is ascending. Multiple sort criteria are supported. (optional)
     * @return IterableActivityResource
     */
    @GET("/v1/{projectName}/activity")
    public static RestDataMethod<IterableActivityResource> getActivitiesUsingGET;

    /**
     * Get activities for project
     *
     * @param projectName /path/ projectName (required)
     * @param filterEqAction /query/ Filters by 'action' (optional)
     * @param filterEqCreationDate /query/ Filters by 'creationDate' (optional)
     * @param filterEqEntity /query/ Filters by 'entity' (optional)
     * @param filterEqId /query/ Filters by 'id' (optional)
     * @param filterEqLogin /query/ Filters by 'login' (optional)
     * @param filterEqName /query/ Filters by 'name' (optional)
     * @param filterEqObjectId /query/ Filters by 'objectId' (optional)
     * @param filterEqObjectName /query/ Filters by 'objectName' (optional)
     * @param filterEqProjectId /query/ Filters by 'projectId' (optional)
     * @param filterEqUser /query/ Filters by 'user' (optional)
     * @param filterEqUserId /query/ Filters by 'userId' (optional)
     * @param pagePage /query/ Results page you want to retrieve (0..N) (optional)
     * @param pageSize /query/ Number of records per page (optional)
     * @param pageSort /query/ Sorting criteria in the format: property, (asc|desc). Default sort order is ascending. Multiple sort criteria are supported. (optional)
     * @return IterableActivityResource
     */
    @QueryParameter(name = "filterEqAction", value = "filterEqAction_example")
    @QueryParameter(name = "filterEqCreationDate", value = "new Date()")
    @QueryParameter(name = "filterEqEntity", value = "filterEqEntity_example")
    @QueryParameter(name = "filterEqId", value = "789")
    @QueryParameter(name = "filterEqLogin", value = "filterEqLogin_example")
    @QueryParameter(name = "filterEqName", value = "789")
    @QueryParameter(name = "filterEqObjectId", value = "789")
    @QueryParameter(name = "filterEqObjectName", value = "filterEqObjectName_example")
    @QueryParameter(name = "filterEqProjectId", value = "789")
    @QueryParameter(name = "filterEqUser", value = "filterEqUser_example")
    @QueryParameter(name = "filterEqUserId", value = "789")
    @QueryParameter(name = "pagePage", value = "56")
    @QueryParameter(name = "pageSize", value = "56")
    @QueryParameter(name = "pageSort", value = "pageSort_example")
    @GET("/v1/{projectName}/activity/")
    public static RestDataMethod<IterableActivityResource> getActivitiesUsingGET1;

    /**
     * getActivity
     *
     * @param activityId /path/ activityId (required)
     * @param projectName /path/ projectName (required)
     * @return ActivityResource
     */
    @GET("/v1/{projectName}/activity/{activityId}")
    public static RestDataMethod<ActivityResource> getActivityUsingGET;

    /**
     * Get activities for test item
     *
     * @param itemId /path/ itemId (required)
     * @param projectName /path/ projectName (required)
     * @param filterEqAction /query/ Filters by 'action' (optional)
     * @param filterEqCreationDate /query/ Filters by 'creationDate' (optional)
     * @param filterEqEntity /query/ Filters by 'entity' (optional)
     * @param filterEqId /query/ Filters by 'id' (optional)
     * @param filterEqLogin /query/ Filters by 'login' (optional)
     * @param filterEqName /query/ Filters by 'name' (optional)
     * @param filterEqObjectId /query/ Filters by 'objectId' (optional)
     * @param filterEqObjectName /query/ Filters by 'objectName' (optional)
     * @param filterEqProjectId /query/ Filters by 'projectId' (optional)
     * @param filterEqUser /query/ Filters by 'user' (optional)
     * @param filterEqUserId /query/ Filters by 'userId' (optional)
     * @param pagePage /query/ Results page you want to retrieve (0..N) (optional)
     * @param pageSize /query/ Number of records per page (optional)
     * @param pageSort /query/ Sorting criteria in the format: property, (asc|desc). Default sort order is ascending. Multiple sort criteria are supported. (optional)
     * @return IterableActivityResource
     */
    @QueryParameter(name = "filterEqAction", value = "filterEqAction_example")
    @QueryParameter(name = "filterEqCreationDate", value = "new Date()")
    @QueryParameter(name = "filterEqEntity", value = "filterEqEntity_example")
    @QueryParameter(name = "filterEqId", value = "789")
    @QueryParameter(name = "filterEqLogin", value = "filterEqLogin_example")
    @QueryParameter(name = "filterEqName", value = "789")
    @QueryParameter(name = "filterEqObjectId", value = "789")
    @QueryParameter(name = "filterEqObjectName", value = "filterEqObjectName_example")
    @QueryParameter(name = "filterEqProjectId", value = "789")
    @QueryParameter(name = "filterEqUser", value = "filterEqUser_example")
    @QueryParameter(name = "filterEqUserId", value = "789")
    @QueryParameter(name = "pagePage", value = "56")
    @QueryParameter(name = "pageSize", value = "56")
    @QueryParameter(name = "pageSort", value = "pageSort_example")
    @GET("/v1/{projectName}/activity/item/{itemId}")
    public static RestDataMethod<IterableActivityResource> getTestItemActivitiesUsingGET;
}
