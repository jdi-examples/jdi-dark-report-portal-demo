/*
 * Report Portal
 * Report Portal API documentation
 *
 * OpenAPI spec version: 5.2.0
 * Contact: Support EPMC-TST Report Portal <SupportEPMC-TSTReportPortal@epam.com>
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.epam.jdi.api;

import com.epam.http.annotations.ServiceDomain;
import com.epam.http.requests.RestMethod;

import com.epam.http.annotations.ContentType;
import com.epam.jdi.model.CreateIssueSubTypeRQ;
import com.epam.jdi.model.CreatePatternTemplateRQ;
import com.epam.jdi.model.EntryCreatedRS;
import com.epam.jdi.model.IssueSubTypeCreatedRS;
import static io.restassured.http.ContentType.JSON;
import com.epam.jdi.model.OperationCompletionRS;
import com.epam.jdi.model.ProjectSettingsResource;
import com.epam.jdi.model.UpdateIssueSubTypeRQ;
import com.epam.jdi.model.UpdatePatternTemplateRQ;
import com.epam.http.annotations.DELETE;
import com.epam.http.annotations.GET;
import com.epam.http.annotations.POST;
import com.epam.http.annotations.PUT;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

@ServiceDomain("${domain}")
public class ProjectSettingsControllerApi {

  /**
   * Create pattern template for items' log messages pattern analysis
   * 
   * @param projectName /path/ projectName (required)
   * @param createPatternTemplateRQ(CreatePatternTemplateRQ) /body/ createPatternTemplateRQ (required)
   * @return EntryCreatedRS
  */
  @ContentType(JSON)
  @POST("/v1/{projectName}/settings/pattern")
  public static RestMethod createPatternTemplateUsingPOSTJSON;

  /**
   * Creation of custom project specific issue sub-type
   * 
   * @param projectName /path/ projectName (required)
   * @param request(CreateIssueSubTypeRQ) /body/ request (required)
   * @return IssueSubTypeCreatedRS
  */
  @ContentType(JSON)
  @POST("/v1/{projectName}/settings/sub-type")
  public static RestMethod createProjectIssueSubTypeUsingPOSTJSON;

  /**
   * Delete pattern template for items' log messages pattern analysis
   * 
   * @param id /path/ id (required)
   * @param projectName /path/ projectName (required)
   * @return OperationCompletionRS
  */
  @DELETE("/v1/{projectName}/settings/pattern/{id}")
  public static RestMethod deletePatternTemplateUsingDELETE;

  /**
   * Delete custom project specific issue sub-type
   * 
   * @param id /path/ id (required)
   * @param projectName /path/ projectName (required)
   * @return OperationCompletionRS
  */
  @DELETE("/v1/{projectName}/settings/sub-type/{id}")
  public static RestMethod deleteProjectIssueSubTypeUsingDELETE;

  /**
   * Get project specific issue sub-types
   * Only for users that are assigned to the project
   * @param projectName /path/ projectName (required)
   * @return ProjectSettingsResource
  */
  @GET("/v1/{projectName}/settings")
  public static RestMethod getProjectSettingsUsingGET;

  /**
   * Update pattern template for items' log messages pattern analysis
   * 
   * @param id /path/ id (required)
   * @param projectName /path/ projectName (required)
   * @param updatePatternTemplateRQ(UpdatePatternTemplateRQ) /body/ updatePatternTemplateRQ (required)
   * @return OperationCompletionRS
  */
  @ContentType(JSON)
  @PUT("/v1/{projectName}/settings/pattern/{id}")
  public static RestMethod updatePatternTemplateUsingPUTJSON;

  /**
   * Update of custom project specific issue sub-type
   * 
   * @param projectName /path/ projectName (required)
   * @param request(UpdateIssueSubTypeRQ) /body/ request (required)
   * @return OperationCompletionRS
  */
  @ContentType(JSON)
  @PUT("/v1/{projectName}/settings/sub-type")
  public static RestMethod updateProjectIssueSubTypeUsingPUTJSON;
}
