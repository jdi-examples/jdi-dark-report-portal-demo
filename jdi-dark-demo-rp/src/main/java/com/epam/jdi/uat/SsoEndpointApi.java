/*
 * Report Portal
 * Report Portal UAT documentation
 *
 * OpenAPI spec version: 5.3.0-SNAPSHOT-BUILD-339
 * Contact: Support EPMC-TST Report Portal <SupportEPMC-TSTReportPortal@epam.com>
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.epam.jdi.uat;

import com.epam.http.annotations.ContentType;
import com.epam.http.annotations.DELETE;
import com.epam.http.annotations.GET;
import com.epam.http.annotations.HEAD;
import com.epam.http.annotations.OPTIONS;
import com.epam.http.annotations.PATCH;
import com.epam.http.annotations.POST;
import com.epam.http.annotations.PUT;
import com.epam.http.annotations.QueryParameter;
import com.epam.http.annotations.ServiceDomain;
import com.epam.http.requests.RestDataMethod;
import com.epam.jdi.model.OAuth2AccessToken;

import static io.restassured.http.ContentType.JSON;

@ServiceDomain("${uat}")
public class SsoEndpointApi {

    /**
     * Create api token
     *
     * @param oauth2RequestApproved /query/  (optional)
     * @param oauth2RequestAuthorities0Authority /query/  (optional)
     * @param oauth2RequestGrantType /query/  (optional)
     * @param oauth2RequestRedirectUri /query/  (optional)
     * @param oauth2RequestRefresh /query/  (optional)
     * @param oauth2RequestRefreshTokenRequestGrantType /query/  (optional)
     * @param oauth2RequestResourceIds /query/  (optional)
     * @param oauth2RequestResponseTypes /query/  (optional)
     * @param authenticated /query/  (optional)
     * @param authorities0Authority /query/  (optional)
     * @param clientOnly /query/  (optional)
     * @param credentials /query/  (optional)
     * @param details /query/  (optional)
     * @param name /query/  (optional)
     * @param principal /query/  (optional)
     * @param userAuthenticationAuthenticated /query/  (optional)
     * @param userAuthenticationAuthorities0Authority /query/  (optional)
     * @param userAuthenticationCredentials /query/  (optional)
     * @param userAuthenticationDetails /query/  (optional)
     * @param userAuthenticationPrincipal /query/  (optional)
     * @return OAuth2AccessToken
     */
    @ContentType(JSON)
    @QueryParameter(name = "oauth2RequestApproved", value = "true")
    @QueryParameter(name = "oauth2RequestAuthorities0Authority", value = "oauth2RequestAuthorities0Authority_example")
    @QueryParameter(name = "oauth2RequestGrantType", value = "oauth2RequestGrantType_example")
    @QueryParameter(name = "oauth2RequestRedirectUri", value = "oauth2RequestRedirectUri_example")
    @QueryParameter(name = "oauth2RequestRefresh", value = "true")
    @QueryParameter(name = "oauth2RequestRefreshTokenRequestGrantType", value = "oauth2RequestRefreshTokenRequestGrantType_example")
    @QueryParameter(name = "oauth2RequestResourceIds", value = "oauth2RequestResourceIds_example")
    @QueryParameter(name = "oauth2RequestResponseTypes", value = "oauth2RequestResponseTypes_example")
    @QueryParameter(name = "authenticated", value = "true")
    @QueryParameter(name = "authorities0Authority", value = "authorities0Authority_example")
    @QueryParameter(name = "clientOnly", value = "true")
    @QueryParameter(name = "credentials", value = "credentials_example")
    @QueryParameter(name = "details", value = "details_example")
    @QueryParameter(name = "name", value = "name_example")
    @QueryParameter(name = "principal", value = "principal_example")
    @QueryParameter(name = "userAuthenticationAuthenticated", value = "true")
    @QueryParameter(name = "userAuthenticationAuthorities0Authority", value = "userAuthenticationAuthorities0Authority_example")
    @QueryParameter(name = "userAuthenticationCredentials", value = "userAuthenticationCredentials_example")
    @QueryParameter(name = "userAuthenticationDetails", value = "userAuthenticationDetails_example")
    @QueryParameter(name = "userAuthenticationPrincipal", value = "userAuthenticationPrincipal_example")
    @POST("/sso/me/apitoken")
    public static RestDataMethod<OAuth2AccessToken> createApiTokenUsingPOST;

    /**
     * Get api token
     *
     * @param name /query/  (optional)
     * @return OAuth2AccessToken
     */
    @QueryParameter(name = "name", value = "name_example")
    @GET("/sso/me/apitoken")
    public static RestDataMethod<OAuth2AccessToken> getApiTokenUsingGET;

    /**
     * user
     *
     * @param authenticated /query/  (optional)
     * @param authorities0Authority /query/  (optional)
     * @param credentials /query/  (optional)
     * @param details /query/  (optional)
     * @param principal /query/  (optional)
     * @return Object
     */
    @QueryParameter(name = "authenticated", value = "true")
    @QueryParameter(name = "authorities0Authority", value = "authorities0Authority_example")
    @QueryParameter(name = "credentials", value = "credentials_example")
    @QueryParameter(name = "details", value = "details_example")
    @QueryParameter(name = "principal", value = "principal_example")
    @DELETE("/sso/me")
    public static RestDataMethod<Object> userUsingDELETE;

    /**
     * user
     *
     * @param authenticated /query/  (optional)
     * @param authorities0Authority /query/  (optional)
     * @param credentials /query/  (optional)
     * @param details /query/  (optional)
     * @param principal /query/  (optional)
     * @return Object
     */
    @QueryParameter(name = "authenticated", value = "true")
    @QueryParameter(name = "authorities0Authority", value = "authorities0Authority_example")
    @QueryParameter(name = "credentials", value = "credentials_example")
    @QueryParameter(name = "details", value = "details_example")
    @QueryParameter(name = "principal", value = "principal_example")
    @DELETE("/sso/user")
    public static RestDataMethod<Object> userUsingDELETE1;

    /**
     * user
     *
     * @param authenticated /query/  (optional)
     * @param authorities0Authority /query/  (optional)
     * @param credentials /query/  (optional)
     * @param details /query/  (optional)
     * @param principal /query/  (optional)
     * @return Object
     */
    @QueryParameter(name = "authenticated", value = "true")
    @QueryParameter(name = "authorities0Authority", value = "authorities0Authority_example")
    @QueryParameter(name = "credentials", value = "credentials_example")
    @QueryParameter(name = "details", value = "details_example")
    @QueryParameter(name = "principal", value = "principal_example")
    @GET("/sso/me")
    public static RestDataMethod<Object> userUsingGET;

    /**
     * user
     *
     * @param authenticated /query/  (optional)
     * @param authorities0Authority /query/  (optional)
     * @param credentials /query/  (optional)
     * @param details /query/  (optional)
     * @param principal /query/  (optional)
     * @return Object
     */
    @QueryParameter(name = "authenticated", value = "true")
    @QueryParameter(name = "authorities0Authority", value = "authorities0Authority_example")
    @QueryParameter(name = "credentials", value = "credentials_example")
    @QueryParameter(name = "details", value = "details_example")
    @QueryParameter(name = "principal", value = "principal_example")
    @GET("/sso/user")
    public static RestDataMethod<Object> userUsingGET1;

    /**
     * user
     *
     * @param authenticated /query/  (optional)
     * @param authorities0Authority /query/  (optional)
     * @param credentials /query/  (optional)
     * @param details /query/  (optional)
     * @param principal /query/  (optional)
     * @return Object
     */
    @ContentType(JSON)
    @QueryParameter(name = "authenticated", value = "true")
    @QueryParameter(name = "authorities0Authority", value = "authorities0Authority_example")
    @QueryParameter(name = "credentials", value = "credentials_example")
    @QueryParameter(name = "details", value = "details_example")
    @QueryParameter(name = "principal", value = "principal_example")
    @HEAD("/sso/me")
    public static RestDataMethod<Object> userUsingHEADJSON;

    /**
     * user
     *
     * @param authenticated /query/  (optional)
     * @param authorities0Authority /query/  (optional)
     * @param credentials /query/  (optional)
     * @param details /query/  (optional)
     * @param principal /query/  (optional)
     * @return Object
     */
    @ContentType(JSON)
    @QueryParameter(name = "authenticated", value = "true")
    @QueryParameter(name = "authorities0Authority", value = "authorities0Authority_example")
    @QueryParameter(name = "credentials", value = "credentials_example")
    @QueryParameter(name = "details", value = "details_example")
    @QueryParameter(name = "principal", value = "principal_example")
    @HEAD("/sso/user")
    public static RestDataMethod<Object> userUsingHEAD1;

    /**
     * user
     *
     * @param authenticated /query/  (optional)
     * @param authorities0Authority /query/  (optional)
     * @param credentials /query/  (optional)
     * @param details /query/  (optional)
     * @param principal /query/  (optional)
     * @return Object
     */
    @ContentType(JSON)
    @QueryParameter(name = "authenticated", value = "true")
    @QueryParameter(name = "authorities0Authority", value = "authorities0Authority_example")
    @QueryParameter(name = "credentials", value = "credentials_example")
    @QueryParameter(name = "details", value = "details_example")
    @QueryParameter(name = "principal", value = "principal_example")
    @OPTIONS("/sso/me")
    public static RestDataMethod<Object> userUsingOPTIONSJSON;

    /**
     * user
     *
     * @param authenticated /query/  (optional)
     * @param authorities0Authority /query/  (optional)
     * @param credentials /query/  (optional)
     * @param details /query/  (optional)
     * @param principal /query/  (optional)
     * @return Object
     */
    @ContentType(JSON)
    @QueryParameter(name = "authenticated", value = "true")
    @QueryParameter(name = "authorities0Authority", value = "authorities0Authority_example")
    @QueryParameter(name = "credentials", value = "credentials_example")
    @QueryParameter(name = "details", value = "details_example")
    @QueryParameter(name = "principal", value = "principal_example")
    @OPTIONS("/sso/user")
    public static RestDataMethod<Object> userUsingOPTIONS1;

    /**
     * user
     *
     * @param authenticated /query/  (optional)
     * @param authorities0Authority /query/  (optional)
     * @param credentials /query/  (optional)
     * @param details /query/  (optional)
     * @param principal /query/  (optional)
     * @return Object
     */
    @ContentType(JSON)
    @QueryParameter(name = "authenticated", value = "true")
    @QueryParameter(name = "authorities0Authority", value = "authorities0Authority_example")
    @QueryParameter(name = "credentials", value = "credentials_example")
    @QueryParameter(name = "details", value = "details_example")
    @QueryParameter(name = "principal", value = "principal_example")
    @PATCH("/sso/me")
    public static RestDataMethod<Object> userUsingPATCHJSON;

    /**
     * user
     *
     * @param authenticated /query/  (optional)
     * @param authorities0Authority /query/  (optional)
     * @param credentials /query/  (optional)
     * @param details /query/  (optional)
     * @param principal /query/  (optional)
     * @return Object
     */
    @ContentType(JSON)
    @QueryParameter(name = "authenticated", value = "true")
    @QueryParameter(name = "authorities0Authority", value = "authorities0Authority_example")
    @QueryParameter(name = "credentials", value = "credentials_example")
    @QueryParameter(name = "details", value = "details_example")
    @QueryParameter(name = "principal", value = "principal_example")
    @PATCH("/sso/user")
    public static RestDataMethod<Object> userUsingPATCH1;

    /**
     * user
     *
     * @param authenticated /query/  (optional)
     * @param authorities0Authority /query/  (optional)
     * @param credentials /query/  (optional)
     * @param details /query/  (optional)
     * @param principal /query/  (optional)
     * @return Object
     */
    @ContentType(JSON)
    @QueryParameter(name = "authenticated", value = "true")
    @QueryParameter(name = "authorities0Authority", value = "authorities0Authority_example")
    @QueryParameter(name = "credentials", value = "credentials_example")
    @QueryParameter(name = "details", value = "details_example")
    @QueryParameter(name = "principal", value = "principal_example")
    @POST("/sso/me")
    public static RestDataMethod<Object> userUsingPOST;

    /**
     * user
     *
     * @param authenticated /query/  (optional)
     * @param authorities0Authority /query/  (optional)
     * @param credentials /query/  (optional)
     * @param details /query/  (optional)
     * @param principal /query/  (optional)
     * @return Object
     */
    @ContentType(JSON)
    @QueryParameter(name = "authenticated", value = "true")
    @QueryParameter(name = "authorities0Authority", value = "authorities0Authority_example")
    @QueryParameter(name = "credentials", value = "credentials_example")
    @QueryParameter(name = "details", value = "details_example")
    @QueryParameter(name = "principal", value = "principal_example")
    @POST("/sso/user")
    public static RestDataMethod<Object> userUsingPOST1;

    /**
     * user
     *
     * @param authenticated /query/  (optional)
     * @param authorities0Authority /query/  (optional)
     * @param credentials /query/  (optional)
     * @param details /query/  (optional)
     * @param principal /query/  (optional)
     * @return Object
     */
    @ContentType(JSON)
    @QueryParameter(name = "authenticated", value = "true")
    @QueryParameter(name = "authorities0Authority", value = "authorities0Authority_example")
    @QueryParameter(name = "credentials", value = "credentials_example")
    @QueryParameter(name = "details", value = "details_example")
    @QueryParameter(name = "principal", value = "principal_example")
    @PUT("/sso/me")
    public static RestDataMethod<Object> userUsingPUT;

    /**
     * user
     *
     * @param authenticated /query/  (optional)
     * @param authorities0Authority /query/  (optional)
     * @param credentials /query/  (optional)
     * @param details /query/  (optional)
     * @param principal /query/  (optional)
     * @return Object
     */
    @ContentType(JSON)
    @QueryParameter(name = "authenticated", value = "true")
    @QueryParameter(name = "authorities0Authority", value = "authorities0Authority_example")
    @QueryParameter(name = "credentials", value = "credentials_example")
    @QueryParameter(name = "details", value = "details_example")
    @QueryParameter(name = "principal", value = "principal_example")
    @PUT("/sso/user")
    public static RestDataMethod<Object> userUsingPUT1;
}
