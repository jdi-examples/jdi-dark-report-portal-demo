/*
 * Report Portal
 * Report Portal API documentation
 *
 * OpenAPI spec version: 5.2.0
 * Contact: Support EPMC-TST Report Portal <SupportEPMC-TSTReportPortal@epam.com>
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.epam.jdi.api;

import com.epam.http.response.RestResponse;
import com.epam.jdi.InitTests;
import org.testng.annotations.BeforeClass;
import org.testng.annotations.Ignore;
import org.testng.annotations.Test;

import static com.epam.http.requests.ServiceInit.init;

/**
 * API tests for UserFilterControllerApi
 */
public class UserFilterControllerApiTest extends InitTests {

    @BeforeClass
    public void before() {
        init(UserFilterControllerApi.class, spec);
    }


    /**
     * Create user filter
     */
    @Ignore
    @Test
    public void createFilterUsingPOSTTest() {
        // TODO: add call parameters and test validations
        RestResponse resp = UserFilterControllerApi.createFilterUsingPOST.call();
        resp.isOk();
    }

    /**
     * Delete specified user filter by id
     */
    @Ignore
    @Test
    public void deleteFilterUsingDELETETest() {
        // TODO: add call parameters and test validations
        RestResponse resp = UserFilterControllerApi.deleteFilterUsingDELETE.call();
        resp.isOk();
    }

    /**
     * Get available filter names
     */
    @Ignore
    @Test
    public void getAllFiltersNamesUsingGETTest() {
        // TODO: add call parameters and test validations
        RestResponse resp = UserFilterControllerApi.getAllFiltersNamesUsingGET.call();
        resp.isOk();
    }

    /**
     * Get permitted (own and shared) filters
     */
    @Ignore
    @Test
    public void getAllFiltersUsingGETTest() {
        // TODO: add call parameters and test validations
        RestResponse resp = UserFilterControllerApi.getAllFiltersUsingGET.call();
        resp.isOk();
    }

    /**
     * Get specified user filter by id
     */
    @Ignore
    @Test
    public void getFilterUsingGETTest() {
        // TODO: add call parameters and test validations
        RestResponse resp = UserFilterControllerApi.getFilterUsingGET.call();
        resp.isOk();
    }

    /**
     * Get all filters for specified user who own them
     */
    @Ignore
    @Test
    public void getOwnFiltersUsingGETTest() {
        // TODO: add call parameters and test validations
        RestResponse resp = UserFilterControllerApi.getOwnFiltersUsingGET.call();
        resp.isOk();
    }

    /**
     * Get all available shared filters (except own shared filters)
     */
    @Ignore
    @Test
    public void getSharedFiltersUsingGETTest() {
        // TODO: add call parameters and test validations
        RestResponse resp = UserFilterControllerApi.getSharedFiltersUsingGET.call();
        resp.isOk();
    }

    /**
     * Get list of specified user filters
     */
    @Ignore
    @Test
    public void getUserFiltersUsingGETTest() {
        // TODO: add call parameters and test validations
        RestResponse resp = UserFilterControllerApi.getUserFiltersUsingGET.call();
        resp.isOk();
    }

    /**
     * Update specified user filter
     */
    @Ignore
    @Test
    public void updateUserFilterUsingPUTTest() {
        // TODO: add call parameters and test validations
        RestResponse resp = UserFilterControllerApi.updateUserFilterUsingPUT.call();
        resp.isOk();
    }

    /**
     * Update list of user filters
     */
    @Ignore
    @Test
    public void updateUserFiltersUsingPUTTest() {
        // TODO: add call parameters and test validations
        RestResponse resp = UserFilterControllerApi.updateUserFiltersUsingPUT.call();
        resp.isOk();
    }

}
